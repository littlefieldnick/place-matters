{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-material/material.module.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/main/main.component.ts","webpack:///src/app/components/main/main.component.html","webpack:///src/app/components/map/map.component.ts","webpack:///src/app/components/map/map.component.html","webpack:///src/app/components/resource-info/resource-info.component.ts","webpack:///src/app/components/resource-info/resource-info.component.html","webpack:///src/app/directives/map-container.directive.ts","webpack:///src/app/forms/default.form.ts","webpack:///src/app/forms/search.form.ts","webpack:///src/app/resolvers/category.resolver.ts","webpack:///src/app/resolvers/resource.resolver.ts","webpack:///src/app/resolvers/single-resource.resolver.ts","webpack:///src/app/services/auth.service.ts","webpack:///src/app/services/category.service.ts","webpack:///src/app/services/resource.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","MaterialModule","routes","path","component","resources","categories","loadChildren","m","AdminModule","redirectTo","pathMatch","AppRoutingModule","forRoot","imports","AppComponent","authService","sanitizer","iconRegistry","title","addSvgIcon","bypassSecurityTrustResourceUrl","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","MainComponent","router","activatedRoute","resourceService","mapOpen","searchForm","snapshot","data","category","get","value","resourceName","length","searchResources","subscribe","reset","getAllResources","idxToOpen","mapComponent","openInfoMarker","setTimeout","search","MapComponent","mapMarkers","zoom","console","log","mapDisplay","nativeElement","offsetWidth","offsetHeight","width","height","loadMarkersAndCenter","size","latCenter","lngCenter","forEach","loc","position","lat","lng","center","re","marker","latitude","longitude","name","markerInfo","address","push","createMapCenter","currentInfoMarker","undefined","idx","curIdx","foundMarker","mapMarkersList","markerIndex","mapMarker","findCorrectMapMarker","close","infoWindows","window","open","map","ResourceInfoComponent","route","resource","MapContainerDirective","elementRef","mapSizeChanged","resize","emit","getWidth","getHeight","outerWidth","outerHeight","host","DefaultFormControl","label","property","validator","disabled","modelProperty","messages","errors","errorName","requiredLength","SearchForm","Object","controls","k","CategoryResolver","categoryDs","state","getAllResourceCategories","pipe","providedIn","ResourceResolver","resourceDs","SingleResourceResolver","getResource","params","AuthService","http","apiRoute","external_api","userEmail","userPass","httpOptions","headers","loginUser","email","password","post","err","errMsg","processServerError","firstName","lastName","user","jwtToken","authorization","localStorage","getItem","verifyJWT","error","ErrorEvent","message","status","CategoryService","apiURL","set","ResourceService","environment","production","api_routes","getResources","getCategories","getUsers","registerUser","login","verifyJwt","maine_center_coords","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatRadioModule} from '@angular/material/radio';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatSliderModule} from '@angular/material/slider';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatListModule} from '@angular/material/list';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatStepperModule} from '@angular/material/stepper';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\nimport {MatChipsModule} from '@angular/material/chips';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatSortModule} from '@angular/material/sort';\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport {ScrollingModule} from \"@angular/cdk/scrolling\";\nimport {MatButtonModule} from \"@angular/material/button\";\n\n@NgModule({\n  exports: [\n    MatInputModule,\n    MatAutocompleteModule,\n      MatButtonModule,\n    MatDatepickerModule,\n    MatFormFieldModule,\n    MatRadioModule,\n    MatSelectModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatMenuModule,\n    MatSidenavModule,\n    MatToolbarModule,\n    MatListModule,\n    MatGridListModule,\n    MatCardModule,\n    MatStepperModule,\n    MatTabsModule,\n    MatExpansionModule,\n    MatButtonToggleModule,\n    MatChipsModule,\n    MatIconModule,\n    MatProgressSpinnerModule,\n    MatProgressBarModule,\n    MatDialogModule,\n    MatTooltipModule,\n    MatSnackBarModule,\n    MatTableModule,\n    MatSortModule,\n    MatPaginatorModule,\n      ScrollingModule\n  ]\n})\nexport class MaterialModule { }","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {MainComponent} from \"./components/main/main.component\";\nimport {ResourceResolver} from \"./resolvers/resource.resolver\";\nimport {CategoryResolver} from \"./resolvers/category.resolver\";\nimport {ResourceInfoComponent} from \"./components/resource-info/resource-info.component\";\nimport {SingleResourceResolver} from \"./resolvers/single-resource.resolver\";\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: MainComponent,\n    resolve: {\n      resources: ResourceResolver,\n      categories: CategoryResolver\n    }\n  },\n  {\n    path: 'info/:id',\n    component: ResourceInfoComponent,\n    resolve: {\n      id: SingleResourceResolver\n    }\n  },\n  {\n    path: \"admin\",\n    loadChildren: () => import(\"./components/admin/admin.module\")\n        .then(m => m.AdminModule),\n  },\n  {\n    path: '**',\n    redirectTo: 'main',\n    pathMatch: 'full'\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport {DomSanitizer} from \"@angular/platform-browser\";\nimport {MatIconRegistry} from \"@angular/material/icon\";\nimport {AuthService} from \"./services/auth.service\";\nimport {catchError} from \"rxjs/operators\";\nimport {of} from \"rxjs\";\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'Place Matters';\n  userLoggedIn: boolean;\n  constructor(private authService: AuthService,\n              private sanitizer: DomSanitizer, private iconRegistry: MatIconRegistry) {\n    iconRegistry.addSvgIcon(\n        'person',\n        sanitizer.bypassSecurityTrustResourceUrl('assets/static/imgs/person-24px.svg'));\n  }\n}\n","<mat-toolbar color=\"primary\">\n  <span>Place Matters Maine</span>\n  <span class=\"pull-right\"></span>\n  <button mat-icon-button\n          matTooltip=\"Admin Login\"\n          aria-label=\"Admin Login\"\n          routerLink=\"admin/login\">\n    <mat-icon svgIcon=\"person\"></mat-icon>\n  </button>\n</mat-toolbar>\n\n<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MainComponent } from './components/main/main.component';\nimport { FlexLayoutModule } from \"@angular/flex-layout\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport {CommonModule} from \"@angular/common\";\nimport {HttpClientModule} from \"@angular/common/http\";\nimport {GoogleMapsModule} from \"@angular/google-maps\";\nimport { ResourceInfoComponent } from './components/resource-info/resource-info.component';\nimport {MapContainerDirective} from \"./directives/map-container.directive\";\nimport {LayoutModule} from \"@angular/cdk/layout\";\nimport { MapComponent } from './components/map/map.component';\nimport {MaterialModule} from \"./app-material/material.module\";\n\n@NgModule({\n  declarations: [\n    MapContainerDirective,\n      AppComponent,\n      MainComponent,\n      ResourceInfoComponent,\n      MapComponent\n  ],\n    imports: [\n        CommonModule,\n        BrowserModule,\n        LayoutModule,\n        HttpClientModule,\n        AppRoutingModule,\n        BrowserAnimationsModule,\n        FlexLayoutModule,\n        CommonModule,\n        GoogleMapsModule,\n        BrowserAnimationsModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MaterialModule,\n    ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import {\n  AfterViewInit,\n  Component,\n  OnInit, Output, ViewChild\n} from '@angular/core';\nimport {SearchForm} from \"../../forms/search.form\";\nimport {Resource} from \"../../models/resource\";\nimport {ResourceCategory} from \"../../models/resource_category\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {ResourceService} from \"../../services/resource.service\";\nimport {MapComponent} from \"../map/map.component\";\n\n@Component({\n  selector: 'main',\n  templateUrl: './main.component.html',\n  styleUrls: ['./main.component.css']\n})\n\nexport class MainComponent implements OnInit, AfterViewInit{\n  title = 'Place Matters Maine';\n  searchForm: SearchForm\n  resources: Array<Resource>\n  categories: Array<ResourceCategory>\n  mapOpen: boolean = true;\n\n  //Needed to communicate with the map and open info markers\n  @ViewChild(MapComponent)\n  private mapComponent: MapComponent;\n\n\n  constructor(private router: Router, private activatedRoute: ActivatedRoute,\n              private resourceService: ResourceService) {\n    this.searchForm = new SearchForm();\n  }\n\n  //Get the page data loaded by the resolver\n  ngOnInit(): void {\n    this.categories = this.activatedRoute.snapshot.data.categories;\n    this.resources = this.activatedRoute.snapshot.data.resources;\n  }\n\n  //Load hidden main (when screen size is smaller than md device)\n  toggleMap(): void {\n    this.mapOpen = !this.mapOpen\n  }\n\n  //Search for a resource based on category and/or name\n  search(): void {\n    let category = this.searchForm.get(\"category\").value;\n    let resourceName = this.searchForm.get(\"name\").value;\n    if (category.length == 0) {\n      category = ''\n    }\n\n    if (resourceName.length == null) {\n      resourceName = ''\n    }\n\n    this.resourceService.searchResources(resourceName, category).subscribe((data: Resource[]) => {\n      this.resources = data[\"results\"];\n    });\n  }\n\n  //Clear the search form\n  resetSearchForm(): void {\n    this.searchForm.reset()\n    this.resourceService.getAllResources().subscribe((data) => {\n      this.resources = data.resources;\n    })\n  }\n\n  //Open an info box located on the map\n  openInfoBox(idxToOpen){\n    this.mapComponent.openInfoMarker(idxToOpen);\n  }\n\n  ngAfterViewInit(): void {\n    setTimeout(() => {\n      this.mapOpen = false;\n\n      //Check device size, if smaller than a certain size, set mapOpen to true to\n      //render map, then set to false to hide it\n    });\n  }\n}\n","<div fxLayout=\"row wrap\" fxLayout.sm=\"column\" style=\"margin-left:10px; margin-right: 10px\">\n  <div fxFlex.gt-sm=\"25%\" fxFlex.lt-md=\"100%\" [fxHide]=\"mapOpen\">\n    <h3 style=\"text-align: center; padding-top:10px\">Search</h3>\n    <form [formGroup]=\"searchForm\" (ngSubmit)=\"search()\">\n      <div *ngFor=\"let control of searchForm.formControls\">\n        <mat-form-field fxFlex=\"100%\">\n          <mat-label>{{control.label}}</mat-label>\n          <div *ngIf=\"control.modelProperty == 'category'; else inputBlock\">\n            <mat-select formControlName=\"{{control.modelProperty}}\">\n              <mat-option></mat-option>\n              <mat-option *ngFor=\"let cat of categories\" value=\"{{cat.name}}\">{{cat.name}}</mat-option>\n            </mat-select>\n          </div>\n          <ng-template #inputBlock>\n            <input type=\"text\" matInput formControlName=\"{{control.modelProperty}}\">\n          </ng-template>\n        </mat-form-field>\n      </div>\n      <div fxLayout=\"column\">\n        <button mat-raised-button color=\"primary\" type=\"submit\">Search</button>\n        <br/>\n        <button mat-raised-button class=\"reset\" (click)=\"this.resetSearchForm()\">Reset</button>\n      </div>\n    </form>\n    <cdk-virtual-scroll-viewport itemSize=\"10\" class=\"map-list-viewport\">\n      <div *cdkVirtualFor=\"let resource of resources; let idx = index\">\n        <mat-card>\n          <mat-card-content>\n            <h2>{{resource.name}}</h2>\n            <h4>{{resource.address}}</h4>\n            <mat-chip-list>\n              <mat-chip color=\"accent\" selected>\n                {{resource.category[\"name\"]}}\n              </mat-chip>\n            </mat-chip-list>\n            <br>\n            <a [routerLink]=\"['/info/', resource.id]\" mat-raised-button color=\"primary\">More Information</a>\n            <a (click)=\"this.openInfoBox(resource.id - 1)\" mat-raised-button color=\"primary\">Show on Map</a>\n          </mat-card-content>\n        </mat-card>\n        <hr>\n      </div>\n    </cdk-virtual-scroll-viewport>\n  </div>\n\n  <map-display class=\"map-format\" fxFlex.lt-sm=\"100\" fxFlex.gt-sm=\"75\"  [fxShow.lt-md]=\"mapOpen\"  [resources]=\"resources\"></map-display>\n\n  <div *ngIf=\"!mapOpen else closeMap\" fxLayout=\"column\" fxFlex.lt-md=\"100%\" fxHide.gt-sm=\"true\">\n    <button id=\"showMap\" mat-raised-button color=\"primary\"  (click)=\"toggleMap()\">Show Map</button>\n  </div>\n  <ng-template #closeMap>\n    <div fxLayout=\"column\" fxFlex.lt-md=\"100%\" fxHide.gt-sm=\"true\">\n      <button id=\"hideMap\" mat-raised-button color=\"primary\"  (click)=\"toggleMap()\">Hide Map</button>\n    </div>\n  </ng-template>\n</div>\n","import {AfterViewInit, Component, ElementRef, Input, OnInit, QueryList, ViewChild, ViewChildren} from '@angular/core';\nimport {GoogleMap, MapInfoWindow, MapMarker} from \"@angular/google-maps\";\nimport {Resource} from \"../../models/resource\";\n\n@Component({\n  selector: 'map-display',\n  templateUrl: './map.component.html',\n  styleUrls: ['./map.component.scss']\n})\n\nexport class MapComponent implements OnInit, AfterViewInit {\n   // Google Map Parameters\n  @ViewChild(GoogleMap, {static: false}) map: GoogleMap\n  @ViewChildren(MapInfoWindow) infoWindows: QueryList<MapInfoWindow>\n  @ViewChildren(MapMarker) mapMarkersList: QueryList<MapMarker>\n  @ViewChild('mapDisplay') mapDisplay: ElementRef;\n  center: google.maps.LatLngLiteral;\n  currentInfoMarker: MapInfoWindow;\n  mapMarkers: Array<any> = []\n  zoom = 15;\n\n\n  @Input()\n  resources: Array<Resource>;\n  height: string;\n  width: string;\n\n  constructor() { }\n\n  ngAfterViewInit():void {\n    setTimeout(() => {\n      console.log(this.mapDisplay.nativeElement.offsetWidth);\n      console.log(this.mapDisplay.nativeElement.offsetHeight);\n      if(this.mapDisplay.nativeElement.offsetWidth != 0)\n        this.width = this.mapDisplay.nativeElement.offsetWidth;\n      if(this.mapDisplay.nativeElement.offsetHeight != 0)\n        this.height = this.mapDisplay.nativeElement.offsetHeight;\n    });\n  }\n\n  ngOnInit(): void {\n    this.loadMarkersAndCenter();\n  }\n\n  resizeMap(size):void {\n    this.height = size.height + 'px';\n    this.width = size.width + 'px';\n  }\n\n  createMapCenter(): void {\n    let latCenter = 0.0;\n    let lngCenter = 0.0\n\n    this.mapMarkers.forEach((loc) => {\n      latCenter += loc.position.lat;\n      lngCenter += loc.position.lng;\n    })\n\n    this.center = {\n      lat: latCenter/this.mapMarkers.length,\n      lng: lngCenter/this.mapMarkers.length\n    };\n  }\n\n  loadMarkersAndCenter(): void {\n    for (let re in this.resources) {\n      let marker = {\n        position: {\n          lat: this.resources[re].latitude,\n          lng: this.resources[re].longitude\n        },\n\n        title: this.resources[re].name,\n\n        markerInfo: {\n          id: this.resources[re].id,\n          name: this.resources[re].name,\n          address: this.resources[re].address,\n          category: this.resources[re].category[\"name\"]\n        }\n      }\n\n      this.mapMarkers.push(marker)\n    }\n\n    this.createMapCenter();\n  }\n\n  userClosed(): void {\n    this.currentInfoMarker = undefined;\n  }\n\n  findCorrectMapMarker(idx){\n    let curIdx = 0;\n    let foundMarker = undefined;\n    this.mapMarkersList.forEach((marker) => {\n      if (idx == curIdx){\n         foundMarker = marker;\n      }\n\n      curIdx++;\n    });\n\n    return foundMarker;\n  }\n\n  openInfoMarker(markerIndex, mapMarker?: MapMarker): void {\n    let curIdx = 0;\n    if(!mapMarker){\n      mapMarker = this.findCorrectMapMarker(markerIndex);\n    }\n\n    //Close current open info window\n    if (this.currentInfoMarker != undefined)\n      this.currentInfoMarker.close()\n\n    this.infoWindows.forEach((window) => {\n      if (curIdx == markerIndex) {\n        window.open(mapMarker)\n        this.currentInfoMarker = window\n      }\n\n      curIdx++\n    });\n  }\n}\n","<div #mapDisplay (mapSizeChanged)=\"this.resizeMap($event)\"\n     class=\"map-responsive\" mapContainer>\n    <google-map [center]=\"center\" [zoom]=\"zoom\" [height]=\"this.height\" [width]=\"this.width\">\n      <map-marker #markerElem=\"mapMarker\" *ngFor=\"let marker of this.mapMarkers; let idx = index\"\n                  [position]=\"marker.position\"\n                  [label]=\"marker.label\"\n                  [title]=\"marker.title\"\n                  (mapClick)=\"openInfoMarker(idx, markerElem)\">\n\n        <map-info-window [options]=\"marker.options\" (close)=\"this.userClosed()\">\n          <h3 class=\"mat-h3\">{{ marker.markerInfo.name }}</h3>\n          <p>{{ marker.markerInfo.address }}</p>\n          <a [routerLink]=\"['/info/', marker.markerInfo.id]\" mat-raised-button color=\"primary\">More Information</a>\n        </map-info-window>\n      </map-marker>\n    </google-map>\n  </div>\n","import { Component, OnInit } from '@angular/core';\nimport {ResourceService} from \"../../services/resource.service\";\nimport { Resource } from \"../../models/resource\";\nimport {ActivatedRoute} from \"@angular/router\";\n\n@Component({\n  selector: 'app-resource-info',\n  templateUrl: './resource-info.component.html',\n  styleUrls: ['./resource-info.component.scss']\n})\nexport class ResourceInfoComponent implements OnInit {\n  id: number\n  resource: Resource;\n  constructor(private route: ActivatedRoute, private resourceService: ResourceService) { }\n\n  ngOnInit(): void {\n    this.resource = this.route.snapshot.data.id;\n    console.log(this.resource)\n  }\n}\n","<div fxLayout=\"row wrap\" fxLayout.sm=\"column\" style=\"margin-left:10px; margin-right: 10px\">\n  <div fxFlex.lt-xl=\"25%\" fxFlex.lt-sm=\"100%\" style=\"padding-top:10px\" >\n    <button mat-raised-button [routerLink]=\"['/']\">Back to Map</button>\n    <br/><br/>\n    <h1 class=\"mat-headline\">{{resource.name}}</h1>\n    <h2 class=\"mat-title\">{{resource.address}}</h2>\n\n    <button mat-stroked-button color=\"primary\">{{resource.category[\"name\"]}}</button>\n    <hr>\n    <p><b class=\"mat-body-2\">Website: </b> <a href=\"{{resource.website}}\">{{resource.website}}</a></p>\n\n    <p><b class=\"mat-body-2\">Description:</b> {{resource.description}}</p>\n\n  </div>\n  <div fxLayout=\"column\">\n    <google-map [center]=\"{lat: resource.latitude, lng: resource.longitude}\">\n      <map-marker [position]=\"{lat: resource.latitude, lng: resource.longitude}\"></map-marker>\n    </google-map>\n  </div>\n</div>\n","import {\n  Directive,\n  ElementRef,\n  EventEmitter,\n  Output\n} from '@angular/core';\n\n@Directive({\n  selector: '[mapContainer]',\n  host: {\n    '(window:resize)': 'this.resize()'\n  }\n})\n\nexport class MapContainerDirective {\n  @Output()\n  mapSizeChanged: EventEmitter<any> = new EventEmitter<number>()\n\n  constructor(private elementRef: ElementRef) {\n    this.resize()\n  }\n\n  resize(){\n    this.mapSizeChanged.emit({\n        width: this.getWidth(),\n        height: this.getHeight()\n    });\n  }\n\n  getWidth(){\n    if (this.elementRef.nativeElement.offsetWidth == 0)\n      return window.outerWidth;\n\n    return this.elementRef.nativeElement.offsetWidth\n  }\n\n   getHeight(){\n    if (this.elementRef.nativeElement.offsetHeight== 0)\n      return window.outerHeight * 0.75;\n\n\n    return this.elementRef.nativeElement.offsetHeight\n  }\n}\n","import {FormControl} from '@angular/forms'\n\nexport class DefaultFormControl extends FormControl{\n  label: string\n  modelProperty: string\n  constructor(label: string, property: string, value:any, validator:any, disabled?: boolean) {\n    super({value: value, disabled: disabled}, validator);\n    this.label = label\n    this.modelProperty = property\n  }\n\n  getValidationMessages() {\n    let messages: string[] = [];\n    if (this.errors) {\n      for (let errorName in this.errors) {\n        switch (errorName) {\n          case \"required\":\n            messages.push(`You must enter a ${this.label}`);\n            break;\n          case \"minlength\":\n            messages.push(`A ${this.label} must be at least\n                            ${this.errors['minlength'].requiredLength}\n                            characters`);\n            break;\n          case \"maxlength\":\n            messages.push(`A ${this.label} must be no more than\n                            ${this.errors['maxlength'].requiredLength}\n                            characters`);\n            break;\n          case \"pattern\":\n            messages.push(`The ${this.label} contains\n                             illegal characters`);\n            break;\n        }\n      }\n    }\n    return messages;\n  }\n}\n","import {FormGroup} from '@angular/forms'\nimport {DefaultFormControl} from \"./default.form\";\n\n\n\nexport class SearchForm extends FormGroup{\n  constructor() {\n    super({\n      name: new DefaultFormControl('Name', 'name', '', [], false),\n      category: new DefaultFormControl('Category', 'category', '', [], false )\n    })\n  }\n\n  get formControls(): DefaultFormControl[] {\n    return Object.keys(this.controls)\n      .map(k => this.controls[k] as DefaultFormControl);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Resolve, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { take, map } from 'rxjs/operators';\n\nimport { Observable } from 'rxjs';\nimport { CategoryService } from \"../services/category.service\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CategoryResolver implements Resolve <Observable<any>>{\n\n  constructor(private categoryDs: CategoryService) { }\n\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot){\n    return this.categoryDs.getAllResourceCategories().pipe(\n      take(1),\n      map(data => data.categories)\n    )\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Resolve, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { take, map } from 'rxjs/operators';\n\nimport { Observable } from 'rxjs';\nimport {ResourceService} from \"../services/resource.service\";\n@Injectable({\n  providedIn: 'root'\n})\nexport class ResourceResolver implements Resolve <Observable<any>>{\n\n  constructor(private resourceDs: ResourceService) { }\n\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot){\n    return this.resourceDs.getAllResources().pipe(\n      take(1),\n      map(data => data.resources)\n    )\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Resolve, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { take, map } from 'rxjs/operators';\n\nimport { Observable } from 'rxjs';\nimport {ResourceService} from \"../services/resource.service\";\n@Injectable({\n  providedIn: 'root'\n})\nexport class SingleResourceResolver implements Resolve <Observable<any>>{\n\n  constructor(private resourceDs: ResourceService) { }\n\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot){\n    return this.resourceDs.getResource(route.params.id).pipe(\n      take(1),\n      map(data => data.resource)\n    )\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient, HttpErrorResponse, HttpHeaders} from \"@angular/common/http\";\nimport { environment } from '../../environments/environment';\nimport {catchError} from \"rxjs/operators\";\nimport {Observable, of, throwError} from \"rxjs\";\n\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AuthService {\n    apiRoute: string;\n    constructor(private http: HttpClient) {\n        this.apiRoute = (environment.external_api || \"/\");\n    }\n\n    loginUser(userEmail, userPass) {\n        const httpOptions = {\n            headers: new HttpHeaders({\n                'Content-Type': 'application/json',\n            })\n        }\n\n        let loginUser = {\n            email: userEmail,\n            password: userPass\n        };\n\n        return this.http.post(this.apiRoute + \"auth/login\", loginUser).pipe(\n            catchError(err => {\n                let errMsg = this.processServerError(err);\n                return throwError(errMsg);\n            })\n        );\n    }\n\n    async register(firstName, lastName, email, password){\n        const httpOptions = {\n            headers: new HttpHeaders({\n                'Content-Type': 'application/json',\n            })\n        }\n        let user = {\n            firstName: firstName,\n            lastName: lastName,\n            email: email,\n            password: password\n        }\n\n        return this.http.post(this.apiRoute + \"api/users/register\", user, httpOptions)\n            .pipe(\n                catchError(err => {\n                    let errMsg = this.processServerError(err);\n                    return throwError(errMsg);\n                })\n            );\n    }\n\n    verifyJWT(jwtToken){\n        let headers = new HttpHeaders({\n            authorization: \"Bearer \" + jwtToken\n        })\n        return this.http.post(this.apiRoute + \"auth/verify\", {}, {headers: headers}).pipe(\n            catchError(err => {\n                let errMsg = this.processServerError(err);\n                return throwError(errMsg);\n            })\n        );\n    }\n\n    isAuthenticated() {\n        let jwtToken = localStorage.getItem(\"accessToken\");\n        // if(jwtToken == null){\n        //     console.log(\"jwtToken is null! You must login!!\");\n        //     return of(false);\n        // }\n\n        return this.verifyJWT(jwtToken).pipe(\n            catchError(err => {\n                let errMsg = this.processServerError(err);\n                return throwError(errMsg);\n            })\n        );\n    }\n\n    private processServerError(err: HttpErrorResponse): string{\n        let errMsg: string;\n        if(err.error instanceof ErrorEvent){\n            errMsg = 'Error: ' + err.message;\n        } else {\n            errMsg = err.error.errors;\n        }\n\n        return errMsg;\n    }\n\n    private getServerErrorMessage(error: HttpErrorResponse): string {\n        switch (error.status) {\n            case 404: {\n                return `Not Found: ${error.error.errors}`;\n            }\n            case 403: {\n                return `Access Denied: ${error.error.errors}`;\n            }\n            case 401: {\n                return `Unauthorized: ${error.error.errors}`;\n            }\n            case 500: {\n                return `Internal Server Error: ${error.error.errors}`;\n            }\n            default: {\n                return `Unknown Server Error: ${error.error.errors}`;\n            }\n        }\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\nimport { Observable } from \"rxjs\";\nimport { ResourceCategory } from \"../models/resource_category\";\nimport { environment} from \"../../environments/environment\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CategoryService{\n  apiURL: string = environment.external_api || '/';\n\n  constructor(public http: HttpClient) {\n\n  }\n\n  getAllResourceCategories(): Observable<any>{\n    const headers = new HttpHeaders().set('Content-Type', 'application-json')\n    return this.http.get<ResourceCategory>(this.apiURL + 'api/categories/', {headers})\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { Observable } from \"rxjs\";\nimport { Resource } from \"../models/resource\";\nimport { environment} from \"../../environments/environment\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ResourceService {\n  apiURL: string = environment.external_api || '/';\n  constructor(public http: HttpClient) {}\n\n  getAllResources(): Observable<any>{\n    const headers = new HttpHeaders().set('Content-Type', 'application-json')\n\n    return this.http.get<Resource>('api/resources/', {headers})\n  }\n\n  getResource(id): Observable<any>{\n    const headers = new HttpHeaders().set('Content-Type', 'application-json')\n    return this.http.get<Resource>('api/resources/' + id, {headers})\n  }\n\n  searchResources(name: string, category: string): Observable<any> {\n    const headers = new HttpHeaders().set('Content-Type', 'application-json')\n    let params = {};\n\n    if(name.length > 0) {\n      params[\"name\"] = name\n    }\n\n    if(category.length > 0){\n      params[\"category\"] = category\n    }\n    return this.http.get<Resource>(\"api/resources/search\",\n      {headers: headers, params: params})\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  external_api: \"http://localhost:5000/\",\n  api_routes: {\n    getResources: 'api/resources/',\n    getCategories: 'api/categories/',\n    search: 'api/search',\n    getUsers: 'api/users/',\n    registerUser: 'api/users/register',\n    login: 'auth/login',\n    verifyJwt: 'auth/verify'\n  },\n  maine_center_coords: {\n    lat: 45.2538,\n    lng: -69.4455\n  }\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}